#+TITLE: Zig-emacs
#+DATE: 2023-12-24T12:27:53+0800
#+LASTMOD: 2023-12-24T12:29:59+0800
#+OPTIONS: toc:nil num:nil
#+STARTUP: content

[[https://github.com/jiacai2050/zig-emacs/actions/workflows/ci.yml][https://github.com/jiacai2050/zig-emacs/actions/workflows/ci.yml/badge.svg]]
[[https://github.com/jiacai2050/zig-emacs/actions/workflows/lisp-ci.yml][https://github.com/jiacai2050/zig-emacs/actions/workflows/lisp-ci.yml/badge.svg]]

Zig binding for Emacs's [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Writing-Dynamic-Modules.html][dynamic modules]].

* Example
#+begin_src zig
const std = @import("std");
const emacs = @import("emacs");
usingnamespace emacs;

// This is required by emacs zig module.
pub const allocator = std.heap.c_allocator;

fn greeting(e: emacs.Env, username: []const u8) !emacs.Value {
    // `[]const u8` is allcated by emacs zig module, we need to ensure
    // is freed.
    defer allocator.free(username);

    const msg = try std.fmt.allocPrintZ(
        allocator,
        "hello {s}!",
        .{username},
    );
    defer allocator.free(msg);

    _ = e.message(msg);
    return e.makeString(msg);
}

fn add(e: emacs.Env, a: i32, b: i32) emacs.Value {
    return e.makeInteger(a + b);
}

// Emacs dynamic module entrypoint
pub fn init(env: emacs.Env) c_int {
    env.defineFunc(
        "zig-greeting",
        greeting,
        .{ .doc_string = "greeting written in Zig" },
    );

    env.defineFunc(
        "zig-add",
        add,
        // This make `zig-add` interactive.
        .{ .interactive_spec = "nFirst number: \nnSecond number: " },
    );

    return 0;
}
#+end_src
Compile [[file:example.zig][this example]] with ~zig build~, then load it into emacs.
#+BEGIN_SRC emacs-lisp
(module-load (expand-file-name "zig-out/lib/libexample.dylib"))
(zig-greeting "Jiacai")
#+END_SRC
If everything is OK, you should see our greeting message in minibuffer.

[[file:screenshot.jpg]]

* Usage
=zig-emacs= support [[https://ziglang.org/download/0.11.0/release-notes.html#Package-Management][package manager]] introduced in Zig 0.11.


* License
[[./LICENSE][MIT]]
